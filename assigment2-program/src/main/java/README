# My Info
------------------------------------------------------------------------------------------------------------------------------
First-name:Deepika.
Last-name: Sulakhe.
SCU-Id: W1653478 or 00001653478.
Email: dsulakhe@scu.edu
--------------------------------------------------------------------------------------------------------------------------------------
# Results : 

Q. In what order were the integers printed?
A: Although the are given and consumed in the right,printing them to the console is not the same order(out of order).
---------------------------------------------------------------------------------------------------------------------------------------
# Discussion :

# Answer the following:

Q1. How many of each integer should you see printed?
A: Each produced integer is consumed once and is displayed once.So, all the produced integers are consumed and printed on console.

Q2. In what order should you expect to see them printed? Why?
A: Without MultiThreading we should see them printed in FIFO order since there are  multiple threads trying to consume and print to the console, 
 access to print function is guarded by lock hence they appear out of order. 
 
 -->Example output of with single consumer and single producer looks like this (In Order printing) :
 Number of consumer threads to be spawned: 1
CircularBuffer capacity is set to: 5
Consumer Thread: 22 started
Producer Thread: 21 started
Please enter numbers separated by space: 
1 2 3 4 5 6
Producer Thread: 21 Pushing 6 parsed integers into circular buffer
Consumer Thread: 22 consumed data: 1
Consumer Thread: 22 consumed data: 2
Consumer Thread: 22 consumed data: 3
Producer Thread: 21 exiting !
Consumer Thread: 22 consumed data: 4
Consumer Thread: 22 consumed data: 5
Consumer Thread: 22 consumed data: 6
Consumer Thread: 22 exiting !
All Producer and Consumer threads joined successfully.

-->Example output of with multiple consumer and single producer looks like this (Out of Order printing) :

Number of consumer threads to be spawned: 4
CircularBuffer capacity is set to: 5
Consumer Thread: 22 started
Consumer Thread: 24 started
Consumer Thread: 23 started
Consumer Thread: 25 started
Producer Thread: 21 started
Please enter numbers separated by space: 
1 2 3 4 5 6 7 8 9 10
Producer Thread: 21 Pushing 10 parsed integers into circular buffer
Consumer Thread: 24 consumed data: 2
Consumer Thread: 22 consumed data: 1
Consumer Thread: 22 consumed data: 6
Consumer Thread: 22 consumed data: 7
Consumer Thread: 22 consumed data: 8
Consumer Thread: 22 consumed data: 9
Consumer Thread: 22 consumed data: 10
Consumer Thread: 23 consumed data: 3
Consumer Thread: 24 consumed data: 4
Consumer Thread: 25 consumed data: 5
Producer Thread: 21 exiting !
Consumer Thread: 23 exiting !
Consumer Thread: 24 exiting !
Consumer Thread: 22 exiting !
Consumer Thread: 25 exiting !
All Producer and Consumer threads joined successfully.

Q3. Did your results differ from your answers in (1) and (2)? Why or why not?
A:  No, my results did not differ from my answers in 1 and 2 as i tested with multiple test case.


//To compile the files run this in command line
javac *.java 
//to run the program 
java Main <Number of consumer threads> 
Ex: java Main 5

//Or if you are using Eclipse IDE to run (Which i have shown in detail in demo video recording)
Step1.Right click on Main.java right click and chose “Run As” -> “Run Configurations.
Step2.Go to Arguments tab (x)=Arguments.
Step3.Specify the "Program Arguments" in the Arguments Tab <Number of consumer threads> .Ex: 5.
Step4. Click on the Run button.
